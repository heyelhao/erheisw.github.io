<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Shawn的木屋</title><link>https://erheisw.github.io/post/</link><description>Recent content in Posts on Shawn的木屋</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 03 Aug 2020 17:48:14 +0800</lastBuildDate><atom:link href="https://erheisw.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>sync.Once源码解读</title><link>https://erheisw.github.io/post/technology/sync.once%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</link><pubDate>Mon, 03 Aug 2020 17:48:14 +0800</pubDate><guid>https://erheisw.github.io/post/technology/sync.once%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</guid><description>&lt;p>最近开始看设计模式相关的内容，同时也在寻找 &lt;strong>Golang&lt;/strong> 相关的技术岗位，就想如何用 &lt;strong>Go&lt;/strong> 语言实现呢？结合自己之前常用的技术栈 &lt;strong>.NET&lt;/strong>，实现了粗糙版的单例模式，本着学习的目的，用&lt;strong>Google&lt;/strong>搜到了比较好的实现方式 &lt;strong>sync.Once&lt;/strong>。照着例子敲了敲，运行结果预期一致。出于对&lt;strong>sync.Once&lt;/strong>实现的好奇，于是乎就研究了下其实现源码。&lt;/p></description></item><item><title>《代码整洁之道》（Clean Code）-读书笔记</title><link>https://erheisw.github.io/post/readings/clean_code_notes/</link><pubDate>Tue, 21 Jul 2020 14:58:31 +0800</pubDate><guid>https://erheisw.github.io/post/readings/clean_code_notes/</guid><description>&lt;p>最近还没找到工作，趁这个时间读了几本之前买过的书，技术类与非技术类的都包括。今天想聊的是 &lt;strong>Robert.C.Martin&lt;/strong>大叔写的这本《Clean Code》。&lt;/p></description></item><item><title>面试之缓存雪崩、缓存击穿、缓存穿透</title><link>https://erheisw.github.io/post/technology/redis_cache_issues/</link><pubDate>Thu, 28 May 2020 16:09:18 +0800</pubDate><guid>https://erheisw.github.io/post/technology/redis_cache_issues/</guid><description>&lt;p>年前失业至今，一直再投简历面试，发现机会真的很少，可能是自己水平太菜。最近也面试了几家，决定记录下自己遇到的技术问题，今天主要简单总结下 &lt;strong>Web&lt;/strong> 缓存相关的问题。&lt;/p></description></item></channel></rss>