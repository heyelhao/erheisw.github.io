<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on Shawn的木屋</title><link>https://erheisw.github.io/tags/go/</link><description>Recent content in Go on Shawn的木屋</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 30 Mar 2021 16:44:41 +0800</lastBuildDate><atom:link href="https://erheisw.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Go学习笔记—01</title><link>https://erheisw.github.io/post/go/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-01/</link><pubDate>Tue, 30 Mar 2021 16:44:41 +0800</pubDate><guid>https://erheisw.github.io/post/go/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-01/</guid><description>&lt;p>本篇介绍了&lt;strong>OS X&lt;/strong> 系统下Go开发环境的搭建方式，以及第一个项目 &lt;strong>Hello World&lt;/strong>&lt;/p></description></item><item><title>sync.Once源码解读</title><link>https://erheisw.github.io/post/technology/sync.once%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</link><pubDate>Mon, 03 Aug 2020 17:48:14 +0800</pubDate><guid>https://erheisw.github.io/post/technology/sync.once%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</guid><description>&lt;p>最近开始看设计模式相关的内容，同时也在寻找 &lt;strong>Golang&lt;/strong> 相关的技术岗位，就想如何用 &lt;strong>Go&lt;/strong> 语言实现呢？结合自己之前常用的技术栈 &lt;strong>.NET&lt;/strong>，实现了粗糙版的单例模式，本着学习的目的，用&lt;strong>Google&lt;/strong>搜到了比较好的实现方式 &lt;strong>sync.Once&lt;/strong>。照着例子敲了敲，运行结果预期一致。出于对&lt;strong>sync.Once&lt;/strong>实现的好奇，于是乎就研究了下其实现源码。&lt;/p></description></item></channel></rss>